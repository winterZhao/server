{> "views/layout.dust"/}

{<title}
<title>首页</title>
<meta name="keywords" content="web全站开发,web全栈开发,web前后端开发" />
<meta name="description" content="web全栈开发相关知识的学习与分享" />
{/title}

{<css}

{/css}

{<nav}
    <ul class="nav pull-right navbar-nav">
          <li class="active"><a href="/">首页</a></li>
          <li><a href="/nodejs">NODEJS</a></li>
          <li><a href="/javascript">JAVASCRIPT</a></li>
          <li><a href="/database">数据库</a></li>
          <li><a href="/tool">工具</a></li>
          <li><a href="/apply">应用</a></li>
          <li><a href="/other">其他</a></li>
    </ul>
{/nav}


{<crumb}
    <ol class="breadcrumb breadcrumb-mg">
        <li><a href="/">首页</a></li>
        <li class="active"><a href="/">搜索</a></li>
    </ol>
{/crumb}

{<articalList}
    <div class="list-group">
        <div class='list-item'>
            <a href="#">
                <h2 class="list-group-item-heading">Node.js Sequelize 实现数据库读写分离</h2>
            </a>
            <p><span class='glyphicon glyphicon-time title='发布时间'></span>&nbsp;<span>2016年09月07日</span>&nbsp;&nbsp;<span class='glyphicon glyphicon-eye-open' title='阅读'></span>&nbsp;<span>12</span></p>
            <p class="list-group-item-text">在构建高并发的Web应用时，除了应用层要采取负载均衡方案外，数据库也要支持高可用和高并发性。使用较多的数据库优化方案是：通过主从复制(Master-Slave)的方式来同步数据，再通过读写分离(MySQL-Proxy)来提升数据库的并发负载能力。在Node.js中，使用 Sequelize操作数据库时，同样支持读写分离。</p>
            <a href='/nodejs/npm/VydcPndib.html'>阅读全文</a>
        </div>

        <div class='list-item'>
            <a href="#">
                <h2 class="list-group-item-heading">Node.js Sequelize 实现数据库读写分离</h2>
            </a>
            <p><span class='glyphicon glyphicon-time title='发布时间'></span>&nbsp;<span>2016年09月07日</span>&nbsp;&nbsp;<span class='glyphicon glyphicon-eye-open' title='阅读'></span>&nbsp;<span>12</span></p>
            <p class="list-group-item-text">在构建高并发的Web应用时，除了应用层要采取负载均衡方案外，数据库也要支持高可用和高并发性。使用较多的数据库优化方案是：通过主从复制(Master-Slave)的方式来同步数据，再通过读写分离(MySQL-Proxy)来提升数据库的并发负载能力。在Node.js中，使用 Sequelize操作数据库时，同样支持读写分离。</p>
            <a href='/nodejs/npm/VydcPndib.html'>阅读全文</a>
        </div>
    </div>
{/articalList}

{<pagination}
    <nav>
      <ul class="pagination">
        <li class='disabled'><a href="#">&laquo;</a></li>
        <li class='active'><a href="#">1</a></li>
        <li><a href="#">2</a></li>
        <li><a href="#">3</a></li>
        <li><a href="#">4</a></li>
        <li><a href="#">5</a></li>
        <li><a href="#">&raquo;</a></li>
      </ul>
    </nav>
{/pagination}
{<js}
{/js}